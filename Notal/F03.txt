Fungsi SummonJin        
function summonjin(data_username : array of array of string, NMax : integer) -> data_username : array of array of string
    { INPUT   : data_username : list[list[str]], NMax : int }
    { OUTPUT  : data_username : list[list[str]] }

KAMUS LOKAL
    indeks    : integer
    username  : string
    password  : string
    jenis_jin : string
    isUsername, isPassword    : Boolean
    data_username             : array of array string

ALGORITMA

    { Meminta Input Jenis Jin }
    output("Jenis jin yang dapat dipanggil: \n (1) Pengumpul - Bertugas mengumpulkan bahan bangunan \n (2) Pembangun - Bertugas membangun candi")
    jenis_jin   : str   <- input("\nMasukkan nomor jenis jin yang ingin dipanggil: ")

    { Validasi input Jenis Jin }
    while(jenis_jin != '1' and jenis_jin != '2') do
        output("\nTidak ada jenis jin bernomor “", jenis_jin, "”!")
        jenis_jin <- input("\nMasukkan nomor jenis jin yang ingin dipanggil: ")

    { Jenis Jin sudah valid }
    if jenis_jin = '1' then
        output("\nMemilih jin “Pengumpul”.")
    else 
        output("\nMemilih jin “Pembangun”.")

    { Input username jin }
    username    : str   <- input("\nMasukkan username jin: ") { meminta masukan user }
    isUsername  : bool  <- False                          { Deklarasi nilai awal, username tidak ditemukan }

    { Pencarian username di database }
    if(dataModule.cariIndeks(username, data_username, 0, NMax) != (-999)) then  { "0" karena username berada di kolom 0 }
        isUsername <- True                       { Username ditemukan }

    { Validasi, username harus belum diambil }
    while (isUsername = True) do
        output("\nUsername “", username, "” sudah diambil!")
        username <- input("\nMasukkan username jin: ")

        { Pencarian username di database }
        if(dataModule.cariIndeks(username, data_username, 0, NMax) = (-999)) then
            isUsername <- False                       { Username tidak ditemukan }

    { Username Belum Diambil } 

    password    : str   <- input("Masukkan password jin: ")
    while (len(password) < 5 or len(password) > 25) do
        output("\nPassword panjangnya harus 5-25 karakter!")
        password    <- input("Masukkan password jin: ")
    
    { Password Sudah Valid }
    { Cari indeks data kosong terdekat }
    indeks  : int   <- 0
    found   : bool  <- False
    while (indeks < NMax) and (found = False) do
        indeks <- indeks + 1                                         { Tambahkan indeks }
        if(data_username[indeks][0] = "*") then
            found <- True

    { Update data user di berdasarkan indeks }
    if (jenis_jin = '1') then { Jin Pengumpul}
        data_username[indeks][0] <- username                   {Update username}
        data_username[indeks][1] <- password                   {Update password}
        data_username[indeks][2] <- 'jin_pengumpul'            {Update role}
    else {(jenis_jin = 2)}
        data_username[indeks][0] <- username                   {Update username}
        data_username[indeks][1] <- password                   {Update password}
        data_username[indeks][2] <- 'jin_pembangun'            {Update role}

    { Print Mantra }
    output(f"\nMengumpulkan sesajen... \nMenyerahkan sesajen... \nMembacakan mantra... \n \nJin {username} berhasil dipanggil!")
    
    { Kembalikan nilai matriks baru }
    return data_username

